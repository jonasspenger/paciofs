language: java

# do not build tagged commits
# this way we avoid rebuilding upon successful deployment (see below)
if: tag IS blank

matrix:
  include:
    - os: linux
      dist: xenial
      jdk: openjdk11
      addons:
        apt:
          packages:
            - clang-format
            - cppcheck
            - libboost-all-dev
            - libfuse-dev
            - rpm
      env:
        - CMAKE_DIST=Linux
        # cmake-<VERSION>-Linux-x86_64/
        - CMAKE_STRIP_COMPONENTS=1
        - GO_DIST=linux
        - LOAD_FUSE_CMD="true"
        - MULTICHAIN_VERSION=2.0.2
        - MULTICHAIN_URL=https://www.multichain.com/download/multichain-${MULTICHAIN_VERSION}.tar.gz

    - os: osx
      osx_image: xcode9.2
      addons:
        homebrew:
          casks:
            - oracle-jdk
            - osxfuse
          packages:
            - boost
            - clang-format
            - cppcheck
          update: true
      env:
        - CMAKE_DIST=Darwin
        # cmake-<VERSION>-Darwin-x86_64/CMake.app/Contents/
        - CMAKE_STRIP_COMPONENTS=3
        - GO_DIST=darwin
        - LOAD_FUSE_CMD="/Library/Filesystems/osxfuse.fs/Contents/Resources/load_osxfuse"
        - MULTICHAIN_VERSION=2.0-release
        - MULTICHAIN_TAG=20190521T124426
        - MULTICHAIN_HASH=2bff381
        - MULTICHAIN_URL=https://github.com/paciofs/multichain/releases/download/${MULTICHAIN_VERSION}-${MULTICHAIN_TAG}/multichain-${MULTICHAIN_VERSION}-${MULTICHAIN_HASH}-osx.tar.gz

    - os: linux
      dist: xenial
      services:
        - docker
      before_install: true
      install: true
      script:
        - docker-compose --log-level INFO --file ./paciofs-docker/docker-compose.yaml build

before_install:
  # load kernel extension on macOS, do nothing otherwise
  - sudo ${LOAD_FUSE_CMD}

  # install CMake, stripping the first N path elements
  - export CMAKE_VERSION="3.14.5"
  - wget --output-document cmake.tar.gz --quiet https://github.com/Kitware/CMake/releases/download/v${CMAKE_VERSION}/cmake-${CMAKE_VERSION}-${CMAKE_DIST}-x86_64.tar.gz
  - sudo mkdir /usr/local/cmake-${CMAKE_VERSION}
  - sudo tar --directory /usr/local/cmake-${CMAKE_VERSION} --extract --file cmake.tar.gz --strip-components ${CMAKE_STRIP_COMPONENTS}
  - rm cmake.tar.gz
  - export PATH="/usr/local/cmake-${CMAKE_VERSION}/bin:${PATH}"

  # install go
  - wget --output-document go.tar.gz --quiet https://dl.google.com/go/go1.12.6.${GO_DIST}-amd64.tar.gz
  - sudo tar --directory /usr/local --extract --file go.tar.gz
  - rm go.tar.gz
  - export GOPATH="${HOME}/go"
  - export GOBIN="${GOPATH}/bin"
  - export PATH="${PATH}:/usr/local/go/bin:${GOBIN}"

  # install dep
  - mkdir -p ${GOBIN}
  - export DEP_RELEASE_TAG="v0.5.0"
  - curl --silent https://raw.githubusercontent.com/golang/dep/master/install.sh | sh

  # install MultiChain
  - wget --output-document multichain.tar.gz --quiet ${MULTICHAIN_URL}
  - sudo tar --directory /usr/local --extract --file multichain.tar.gz
  - rm multichain.tar.gz
  - export MULTICHAIN_HOME="/usr/local/multichain-${MULTICHAIN_VERSION}"

  # for cppcheck-htmlreport
  - pip install --user pygments

install:
  # install parent pom only first
  - mvn --non-recursive install
  - mvn --file ./paciofs-client/third_party/pom.xml install
  - mvn install --define skipTests=true --define maven.javadoc.skip=true --batch-mode --show-version

script: ./travis/test.sh

after_success:
  # set the tag to enable deployment
  - export TRAVIS_TAG=${TRAVIS_BRANCH}-build

deploy:
  name: "Build of PacioFS ${TRAVIS_BRANCH}"
  body: "Build of https://github.com/paciofs/paciofs/tree/${TRAVIS_COMMIT}"
  provider: releases
  api_key:
    secure: YB55j3A4CCCjRN4gc8b1lo9eFNcvnwJN3SgQduZgF3Lr3no4gompkYO97RBltl7IQZtN6bBcKN/kkxaCHkAwFD0CFF4rOW3TXZMlX6kBrtdPhbvHKICH5w+ccmI6qfE3A3XcmZBiWoru4JZgJVhgGPwb+1Zapb2nWAy/BlIxNtZDbCLcdzlFDKMd9d7VfnoJjHroogjSGZK+Rs9OmruMcl0txPksm4bKtu2X8opu8+iBb3ybDbRsMKh6cYVlXw9Micu8GBoAOCxNkrPFeL2LEawdS27/M0UDDSs6ytTCrLq/ox0fnVDocJqMImxikCHbT7KKmmdTCcO8UavjRH1plpBxrFgRhd3mhigazcF441QspSIB60tO9yZRTaRs1qVKfRKqHcRwqJ24IS7n6DehTFMGBZjj/DWcMpbIQ3L9D0Gr84J9RbEmcfKpjgga8WRwW9HKJ500vfCdxUOfXzheOE1168jdxgB1tfNEIyggbVvskze0iXWg4HEf6FWB9qD+TnRZm8jDOgDHjMkO/gPTN8Rd+4ROfOHsl06mzbZnNhPfhs2xkcW7+DW2B24E+gFDshKoOQ0woSkgihCDjnBNXB2mCNURNbx+e4NGubzlUofUKFFcozds1bIy4DHCOxetAJXljXEaB1oNhkfpDKRlC0CdtDMjt2hR2tOzc9Bt35A=
  # upload generated packages (.deb, .rpm, .pkg)
  file_glob: true
  file: paciofs-client/target/Release/paciofs_client-*
  skip_cleanup: true
  overwrite: true
  on:
    repo: ${TRAVIS_REPO_SLUG}
    tags: true
