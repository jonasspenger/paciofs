syntax = "proto3";

option java_multiple_files = true;
option java_outer_classname = "PosixIo";
option java_package = "de.zib.paciofs.io.posix.grpc";

package paciofs.io.posix.grpc;

import "messages/errno.proto";
import "messages/ping.proto";
import "messages/dir.proto";
import "messages/stat.proto";

message PingRequest {
  paciofs.grpc.messages.Ping ping = 1;
}

message PingResponse {
  paciofs.grpc.messages.Ping ping = 1;
}

message StatRequest {
  string path = 1;
}

message StatResponse {
  messages.Stat stat = 1;
  messages.Errno error = 2;
}

message MkNodRequest {
  string path = 1;
  uint32 mode = 2;
  sint32 dev = 3;
}

message MkNodResponse {
  messages.Errno error = 1;
}

message MkDirRequest {
  string path = 1;
  uint32 mode = 2;
}

message MkDirResponse {
  messages.Errno error = 1;
}

message ChModRequest {
  string path = 1;
  uint32 mode = 2;
}

message ChModResponse {
  messages.Errno error = 1;
}

message ChOwnRequest {
  string path = 1;
  uint32 uid = 2;
  uint32 gid = 3;
}

message ChOwnResponse {
  messages.Errno error = 1;
}

message OpenRequest {
  string path = 1;
  sint32 flags = 2;
}

message OpenResponse {
  messages.Errno error = 1;
  uint64 fh = 2;
}

message ReadDirRequest {
  string path = 1;
}

message ReadDirResponse {
  repeated messages.Dir dirs = 1;
  messages.Errno error = 2;
}

service PosixIoService {
  rpc Ping(PingRequest) returns (PingResponse);
  rpc Stat(StatRequest) returns (StatResponse);
  rpc MkNod(MkNodRequest) returns (MkNodResponse);
  rpc MkDir(MkDirRequest) returns (MkDirResponse);
  rpc ChMod(ChModRequest) returns (ChModResponse);
  rpc ChOwn(ChOwnRequest) returns (ChOwnResponse);
  rpc Open(OpenRequest) returns (OpenResponse);
  rpc ReadDir(ReadDirRequest) returns (ReadDirResponse);
}
